/* frontend/src/components/NewsPageLoader.css */
.news-page-loader-container.orbital-globe {
  width: 150px; /* Adjust size as needed */
  height: 150px;
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 40px auto;
}

.news-page-loader-svg {
  width: 100%;
  height: 100%;
  overflow: visible;
}

/* --- Using Veteran Theme Colors from App.css ---
  --accent-color-primary-veteran: #0A84FF;
  --text-color-primary-veteran: #f5f5f7;
  --text-color-secondary-veteran: #888888;
*/

.npg-globe-body {
  fill: var(--accent-color-primary-veteran, #0A84FF);
  opacity: 0.15; /* Make the globe body very subtle */
}

/* Longitude Lines for spinning effect */
.npg-longitude-lines {
  transform-origin: center;
  /* animation: npgSpinGlobe 20s linear infinite; */ /* Spin the whole group if desired */
}
.npg-longitude-line {
  fill: none;
  stroke: var(--accent-color-primary-veteran, #0A84FF);
  stroke-width: 0.75px;
  opacity: 0.5;
  transform-origin: center;
  animation: npgLongitudeFlow 4s infinite ease-in-out;
  /* Stagger animation for different lines */
  animation-delay: calc(var(--line-index) * -0.66s); /* Creates a wave */
}

/* Latitude Lines */
.npg-latitude-line {
  fill: none;
  stroke: var(--accent-color-primary-veteran, #0A84FF);
  stroke-width: 0.5px;
  opacity: 0.2;
  transform-origin: center;
}


@keyframes npgSpinGlobe { /* Optional: if you want the whole globe structure to spin slowly */
  from { transform: rotateY(0deg) rotateX(5deg); }
  to { transform: rotateY(360deg) rotateX(5deg); }
}

@keyframes npgLongitudeFlow { /* Animates rx of ellipses to simulate passing over a sphere */
  0%, 100% { rx: calc(var(--globe-radius, 50px) * 0.2); opacity: 0.3; } /* globeRadius from JS approx */
  50% { rx: var(--globe-radius, 50px); opacity: 0.6; } /* Full width at the center */
}


/* Orbiting Asteroids */
.npg-asteroid-orbit {
  /* animation-name: npgOrbitPathRotation; */ /* If the <g> itself needs to rotate, not the mpath */
  /* animation-timing-function: linear; */
  /* animation-iteration-count: infinite; */
  /* Duration and delay set inline by JS for the group, SMIL for the motion */
}

/*
@keyframes npgOrbitPathRotation { // Use this if animateMotion on ellipse path is problematic
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}
*/

.npg-asteroid {
  fill: var(--text-color-primary-veteran, #f5f5f7);
  /* SMIL animations for opacity and transform are now directly in the SVG */
  /* Fallback CSS animation for appearance, SMIL will handle timing if supported */
  /* 
  opacity: 0; 
  animation: npgAsteroidPulseAndFade 0s infinite; 
  animation-delay: inherit; 
  */
}

/* Animation for asteroid's appearance during its orbit controlled by animateMotion */
/* This CSS animation will apply on top of the SMIL motion - REMOVED as SMIL <animate> and <animateTransform> are now used directly */
/*
@keyframes npgAsteroidPulseAndFade {
  0% { opacity: 0; transform: scale(0.5); }
  20% { opacity: 1; transform: scale(1.2); } 
  80% { opacity: 1; transform: scale(0.8); } 
  100% { opacity: 0; transform: scale(0.5); } 
}
*/


/* Text Ticker on Globe */
.npg-ticker-text {
  font-family: var(--apple-font-family, sans-serif); /* From App.css */
  font-size: 10px; /* Adjust as needed */
  font-weight: 600;
  fill: var(--text-color-primary-veteran, #f5f5f7);
  text-shadow: 0 0 3px rgba(0,0,0,0.5);
  opacity: 0;
  animation: npgTextFadeInOut 2.5s ease-in-out infinite; /* Matches JS interval */
  dominant-baseline: middle;
  letter-spacing: 0.5px;
}

@keyframes npgTextFadeInOut {
  0%, 100% { opacity: 0; transform: translateY(5px) scale(0.95); }
  20%, 80% { opacity: 1; transform: translateY(0px) scale(1); }
}

/* NewsPageLoader.css */
.newspaper-loader-svg {
  /* Add any container styles if needed, e.g., margin if the loader div doesn't handle it */
}

/* Page styling */
.np-page-bottom,
.np-page-middle,
.np-page-top {
  fill: url(#paperGradient); /* Apply gradient for a slight 3D paper effect */
  /* stroke: #B0B0B0; */ /* Optional stroke for page edges */
  /* stroke-width: 0.5px; */
}

.np-page-bottom {
  fill: #BDBDBD; /* Darkest underlying page */
}
.np-page-middle {
 fill: #D0D0D0; /* Middle page */
}
.np-page-top {
  fill: #EAEAEA; /* Lightest top page */
}

/* Lines on the page */
.np-line {
  stroke: #888888; /* Dark grey for text lines, using a theme variable like var(--text-color-secondary-veteran) would be good if available globally */
  stroke-width: 2.5; /* Slightly thicker lines */
  stroke-linecap: round;
}

/* Animation for the top page group */
.np-page-top-group {
  /* transform-origin: left-edge-of-page vertical-center-of-page */
  /* Page starts at x=16, y=14. Width=80, Height=70. */
  /* Left edge for turning is x=16. Vertical center is y = 14 + (70/2) = 14 + 35 = 49. */
  transform-origin: 16px 49px; 
  animation: flipPage 2.2s infinite ease-in-out;
}

@keyframes flipPage {
  0%, 100% {
    transform: perspective(800px) rotateY(0deg);
    opacity: 1;
  }
  20% { /* Page starts to lift and turn */
     transform: perspective(800px) translateX(5px) translateZ(30px) rotateY(-25deg);
     opacity: 1;
  }
  45% { /* Mid-flip, page is angled away */
    transform: perspective(800px) translateX(-70px) translateZ(60px) rotateY(-165deg);
    opacity: 0.3; /* Fades as it turns away */
  }
  50% { /* Page is fully turned, invisible or nearly so */
    transform: perspective(800px) translateX(-80px) translateZ(50px) rotateY(-180deg);
    opacity: 0;
  }
  /* Page 'resets' and starts to appear from the other side as if a new page is on top */
  50.01% { /* Start of the 'new' page appearing */
    transform: perspective(800px) rotateY(10deg); /* Slightly open from the 'new' stack */
    opacity: 0; /* Start invisible */
  }
  70% { /* 'New' page is turning into place */
     transform: perspective(800px) translateX(5px) translateZ(30px) rotateY(20deg);
     opacity: 0.7;
  }
  100% { /* 'New' page is settled */
    transform: perspective(800px) rotateY(0deg);
    opacity: 1;
  }
}

/* Optional: Animate lines on the page to fade during the flip for more realism */
.np-page-top-group .np-line {
   animation: lineFadeDuringFlip 2.2s infinite ease-in-out;
}

@keyframes lineFadeDuringFlip {
  0%, 20%, 80%, 100% { opacity: 1; } /* Lines fully visible when page is flat */
  40%, 60% { opacity: 0.1; } /* Lines fade significantly as page turns */
} 